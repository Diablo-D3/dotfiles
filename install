#!/usr/bin/env bash

# shellcheck disable=SC1090

set -a
set -e
shopt -s extglob

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MODULES_DIR="${BASE_DIR}/modules"

. "$BASE_DIR/install-lib"

###
### Stage 1
###

start "Starting..."

# Discover OS quirks

case "$(uname -a)" in
  *WSL*)
    export OS="win"
    . "${MODULES_DIR}/wsl/stealenv.sh"
    ;;
  *)
  ;;
esac

if [ x"${OS}" != x ]; then
  status "Discovered platform ${OS}"
fi

end

start "Make required skeleton directories..."

mkdir -vp "$HOME/.cache"
mkdir -vp "$HOME/.ssh"

mkdir -vp "$HOME/bin"

end

start "Remove stale symlinks..."

paths=( "$HOME" "$HOME/.config" )

if [ x"${OS}" == x"WSL" ]; then
  paths+=( "$USERPROFILE" "$APPDATA" "$LOCALAPPDATA" )
fi

for path in "${paths[@]}"; do
  find "$path" -mindepth 1 -maxdepth 2 -xtype l -print0 | xargs -0 -r -t -n 1 unlink
done

unset paths

end

start "Update git repos..."

cd "${BASE_DIR}"

git stash
git pull

if [ "$(git stash list | wc -l)" -gt 0 ]; then
  git stash pop
fi

git submodule update --init --recursive

end

###
### Stage 2
###

for MODULE_DIR in "${MODULES_DIR}"/*/; do
  MODULE_DIR=${MODULE_DIR%/}
  MODULE=${MODULE_DIR#$MODULES_DIR/}

  if ( command -v "${MODULE}" >/dev/null 2>&1 || command -v "${MODULE}.exe" >/dev/null 2>&1 ); then
    ANY_CONF="${MODULES_DIR}/${MODULE}.any.sh"
    OS_CONF="${MODULES_DIR}/${MODULE}.${OS}.sh"

    if [ -f "${ANY_CONF}" ]; then
      start "Installing ${ANY_CONF}..."
      $ANY_CONF
      end
    fi

    if [ -f "${OS_CONF}" ]; then
      start "Installing ${OS_CONF}..."
      $OS_CONF
      end
    fi

  else
    status "${MODULE} not installed, skipping"
    continue
  fi
done

###
### Stage 3
###

start "Checking git tags..."
"${BASE_DIR}/checkgittag.sh" modules/vim/spacevim
end

status "Finished installing"

