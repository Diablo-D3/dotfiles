#!/usr/bin/env bash

# shellcheck disable=SC1090

cd "$(dirname "${BASH_SOURCE[0]}")" || exit
BASE_DIR="$(pwd)"
export BASE_DIR

export MODULES_DIR="$BASE_DIR/modules"

source "$BASE_DIR/install-lib"

###
### Stage 1: Do housekeeping
###

_start "Installing"
_end

_start "Remove stale symlinks"

_mkdir "$HOME/bin"

find "$HOME" -mindepth 1 -name ".*" -xtype l -print0 | xargs -0 -r -t -n 1 unlink
find "$HOME/bin" -mindepth 1 -xtype l -print0 | xargs -0 -r -t -n 1 unlink

_end

###
### Stage 2: Build list of modules
###

_start "Module detection"

declare -a MODULES

uname="$(uname -a)"

if (command -v "lsb_release" >/dev/null 2>&1); then
  linux="$(lsb_release -i -s)"
else
  linux=""
fi

# Early OS pass
if [[ "$uname" == *"WSL"* ]]; then
  _status "Discovered WSL"

  MODULES+=("os-wsl")

  export WSL="true"
  "$MODULES_DIR/os-wsl/stealenv.sh"
  if [ -x "$HOME/.bashrc.win" ]; then
    # shellcheck disable=SC1091
    source "$HOME/.bashrc.win"
  else
    echo "Windows env vars didn't get stolen correctly"
  fi
fi

# Add non-OS modules
for MODULE in "$MODULES_DIR/"!(os)*/; do
  # remove "modules/" prefix and "/" suffix
  MODULE="${MODULE#"$MODULES_DIR/"}"
  MODULE="${MODULE%/}"

  if (command -v "$MODULE" >/dev/null 2>&1 || command -v "$MODULE.exe" >/dev/null 2>&1); then
    _status "Discovered $MODULE"
    MODULES+=("$MODULE")
  fi
done

# Late OS pass
if [ "$linux" != "" ]; then
  _status "Discovered $linux"

  # make lowercase
  MODULES+=("os-${linux,,}")
fi

###
### Stage 3: Install modules
###

for MODULE in "${MODULES[@]}"; do
  # reconstitute directory of module
  MODULE_DIR="$MODULES_DIR/$MODULE"

  # path of config script
  MODULE_SH="$MODULES_DIR/$MODULE.sh"

  # paths for autorules
  MODULE_HOME="$MODULE_DIR/HOME"
  MODULE_BIN="$MODULE_DIR/BIN"
  MODULE_ETC="$MODULE_DIR/ETC"
  MODULE_LIST="$MODULE_DIR/GIT"

  _start "Installing for $MODULE"

  _stow "$MODULE_HOME" "$HOME/."
  _stow "$MODULE_BIN" "$HOME/bin/"
  _sudo _stow "$MODULE_ETC" "/etc"

  if [ -f "$MODULE_LIST" ]; then
    _git_list "$MODULE_LIST"
  fi

  if [ -f "$MODULE_SH" ]; then
    "$MODULE_SH"
  fi

  _end
done

###
### Stage 4: Final tasks
###

_start "Finished installing"
_end
