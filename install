#!/usr/bin/env bash

# shellcheck disable=SC1090

set -a
set -e
shopt -s nullglob

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MODULES_DIR="$BASE_DIR/modules"

source "$BASE_DIR/install-lib"

###
### Stage 1
###

if [ x"$INSTALLING" == x ]; then
  _start "Installing"
  INSTALLING=1
else
  _start "Install script changed, restarting"
fi

case "$(uname -a)" in
  *WSL*)
    export OS="win"
    source "$MODULES_DIR/wsl/stealenv.sh"
    ;;
  *)
  ;;
esac

if [ x"$OS" != x ]; then
  _status "Discovered platform $OS"
fi

_end

_start "Update git repos"

CHECKSUM_ORIG=$(git -C "$BASE_DIR" hash-object install)
git -C "$BASE_DIR" pull --force --autostash
CHECKSUM_NEW=$(git -C "$BASE_DIR" hash-object install)

_end

if [ x"$CHECKSUM_ORIG" != x"$CHECKSUM_NEW" ]; then
  "$BASE_DIR/install"
  exit $?
fi

_start "Make required skeleton directories"

mkdir -vp "$HOME/.cache"
mkdir -vp "$HOME/.ssh"

mkdir -vp "$HOME/bin"

_end

_start "Remove stale symlinks"

paths=( "$HOME" "$HOME/.config" )

if [ x"$OS" == x"WSL" ]; then
  paths+=( "$USERPROFILE" "$APPDATA" "$LOCALAPPDATA" )
fi

for path in "${paths[@]}"; do
  find "$path" -mindepth 1 -maxdepth 2 -xtype l -print0 | xargs -0 -r -t -n 1 unlink
done

unset paths

_end

###
### Stage 2
###

for MODULE_DIR in "$MODULES_DIR"/*/; do
  MODULE_DIR="${MODULE_DIR%/}"
  MODULE="${MODULE_DIR#$MODULES_DIR/}"

  if ( command -v "$MODULE" >/dev/null 2>&1 || command -v "$MODULE.exe" >/dev/null 2>&1 ); then
    MODULE_ANY="$MODULE.any"
    MODULE_OS="$MODULE.$OS"

    MODULE_ANY_CONF="$MODULES_DIR/$MODULE_ANY.sh"
    MODULE_OS_CONF="$MODULES_DIR/$MODULE_OS.sh"

    if [ -f "$MODULE_ANY_CONF" ]; then
      _start "Running $MODULE_ANY"
      $MODULE_ANY_CONF
      _end
    fi

    if [ -f "$MODULE_OS_CONF" ]; then
      _start "Installing $MODULE_OS"
      $MODULE_OS_CONF
      _end
    fi

  else
    _status "$MODULE not installed, skipping"
    continue
  fi
done

###
### Stage 3
###

_start "Finished installing"

