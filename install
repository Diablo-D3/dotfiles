#!/usr/bin/env bash

# shellcheck disable=SC1090

cd "$(dirname "${BASH_SOURCE[0]}")" || exit
base_dir="$(pwd)"
export base_dir

export modules_dir="$base_dir/modules"

source "$base_dir/install-lib"

###
### Stage 1: Do housekeeping
###

_start "Installing"
_end

_start "Remove stale symlinks"

find "$HOME" -mindepth 1 -name ".*" -xtype l -print0 | xargs -0 -r -t -n 1 unlink
find "$HOME/bin" -mindepth 1 -xtype l -print0 | xargs -0 -r -t -n 1 unlink

_end

###
### Stage 2: Build list of modules
###

_start "Module detection"

declare -a modules

uname="$(uname -a)"

if (command -v "lsb_release" >/dev/null 2>&1); then
  linux="$(lsb_release -i -s)"
else
  linux=""
fi

# Early OS pass
if [[ "$uname" == *"WSL"* ]]; then
  _status "Discovered WSL"

  modules+=("os-wsl")

  export wsl="true"
  "$modules_dir/os-wsl/stealenv.sh"
  source "$HOME/.bashrc.win"

  # No good place to actually define these
  scoop_dir="$USERPROFILE/scoop/shims"
fi

# Add non-OS modules
for module in "$modules_dir/"!(os)*/; do
  # remove "modules/" prefix and "/" suffix
  module="${module#$modules_dir/}"
  module="${module%/}"

  if (command -v "$module" >/dev/null 2>&1 || command -v "$module.exe" >/dev/null 2>&1); then
    _status "Discovered $module"
    modules+=("$module")
  fi
done

# Late OS pass
if [ "$linux" != "" ]; then
  _status "Discovered $linux"

  # make lowercase
  modules+=("os-${linux,,}")
fi

###
### Stage 3: Install modules
###

for module in "${modules[@]}"; do
  # reconstitute directory of module
  module_dir="$modules_dir/$module"

  # path of config script
  module_sh="$modules_dir/$module.sh"

  # paths for autorules
  module_home="$module_dir/HOME"
  module_bin="$module_dir/BIN"
  module_etc="$module_dir/ETC"
  module_list="$module_dir/GIT"

  _start "Installing for $module"

  _stow "$module_home" "$HOME/."
  _stow "$module_bin" "$HOME/bin/"
  _sudo _stow "$module_etc" "/etc"

  if [ -f "$module_list" ]; then
    _git_list "$module_list"
  fi

  if [ -f "$module_sh" ]; then
    "$module_sh"
  fi

  _end
done

###
### Stage 4: Final tasks
###

_start "Finished installing"
_end
