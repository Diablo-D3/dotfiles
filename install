#!/usr/bin/env bash

set -e
shopt -s extglob

GREEN="$(tput setaf 2)"

function status_msg()
{
  echo -e "\n${GREEN}==> ${1}"
}

function status_warn()
{
  echo -e "\n==> ${1}"
}

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

DOTBOT_DIR="dotbot"
DOTBOT_BIN="bin/dotbot"
DOTBOT="${BASE_DIR}/${DOTBOT_DIR}/${DOTBOT_BIN}"

MODULES_DIR="${BASE_DIR}/modules"

case "$(uname)" in
  Linux*)
    OS="linux";;
  MSYS*)
    OS="win";;
  *)
    echo "Unhandled OS"
    exit -1;;
esac

# Stage 1
status_msg "Starting..."

cd "${BASE_DIR}"
git -C "${DOTBOT_DIR}" submodule sync --quiet --recursive
git submodule update --init --recursive "${DOTBOT_DIR}"
"${DOTBOT}" -d "${BASE_DIR}" -c "install.conf.yaml" "${@}"

# Stage  2
for MODULE_DIR in "${MODULES_DIR}"/os-*/; do
  MODULE_DIR=${MODULE_DIR%/}
  MODULE=${MODULE_DIR#$MODULES_DIR/}

  if [ "${MODULE}" == "os-${OS}" ]; then
    CONF_YAML="${MODULES_DIR}/${MODULE}.conf.yaml"

    if [ -f "${CONF_YAML}" ]; then
      status_msg "Installing ${MODULE}..."
      "${DOTBOT}" -d "${MODULES_DIR}" -c "${CONF_YAML}" "${@}"
    else
      status_warn "Not on ${MODULE-#os-}, skipping"
      continue
    fi
  fi
done

# Stage 3
for MODULE_DIR in "${MODULES_DIR}"/!(os-*)/; do
  MODULE_DIR=${MODULE_DIR%/}
  MODULE=${MODULE_DIR#$MODULES_DIR/}

  if command -v "${MODULE}" >/dev/null 2>&1; then
    ANY_CONF_YAML="${MODULES_DIR}/${MODULE}.any.conf.yaml"
    OS_CONF_YAML="${MODULES_DIR}/${MODULE}.${OS}.conf.yaml"

    if [ -f "${ANY_CONF_YAML}" ]; then
      status_msg "Installing ${MODULE}..."
      "${DOTBOT}" -d "${MODULES_DIR}" -c "${ANY_CONF_YAML}" "${@}"
    fi

    if [ -f "${OS_CONF_YAML}" ]; then
      status_msg "Installing ${MODULE}.${OS}..."
      "${DOTBOT}" -d "${MODULES_DIR}" -c "${OS_CONF_YAML}" "${@}"
    fi
  else
    status_warn "${MODULE} not installed, skipping"
    continue
  fi
done

status_msg "Finishing..."
"${DOTBOT}" -d "${BASE_DIR}" -c "end.conf.yaml" "${@}"

status_msg "Finished installing"
